<Window Name="MWindow" x:Class="GroupOperations.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        mc:Ignorable="d"
        AllowsTransparency="True"
        Background="Transparent"
        BorderBrush="{Binding Background, ElementName=HeaderZone}"
        BorderThickness="1"
        FontFamily="{DynamicResource MaterialDesignFont}"
        ResizeMode="CanResizeWithGrip"
        SnapsToDevicePixels="True"
        Title="Групповые действия"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextOptions.TextFormattingMode="Ideal"
        TextOptions.TextRenderingMode="Auto"
        TextElement.FontWeight="Regular"
        TextElement.FontSize="13"
        Height="400" Width="400"
        MinHeight="400" MinWidth="400"
        Icon="FileIcon.ico" WindowStyle="None" MouseLeftButtonDown="MWindow_MouseLeftButtonDown">
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition/>
        </Grid.RowDefinitions>

        <!--Панель элементов-->
        <materialDesign:ColorZone Name="HeaderZone"
                                  materialDesign:ShadowAssist.ShadowDepth="Depth2"
                                  Mode="PrimaryMid"
                                  DockPanel.Dock="Top"
                                  Grid.Row="0">
            <Grid Grid.Row="0" Grid.ColumnSpan="3">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="8"/>
                        <Setter Property="Padding" Value="0"/>
                        <Setter Property="VerticalAlignment" Value="Center"/>
                    </Style>
                    <Style TargetType="Button"
                                       BasedOn="{StaticResource MaterialDesignFloatingActionMiniButton}">
                        <Setter Property="Margin" Value="0,8,8,8"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Image Height="16" Margin="8" Source="FileIcon.ico"/>
                <TextBlock Grid.Column="1"
                           Text="Групповые действия"
                           Margin="0"/>
                <TextBlock Grid.Column="2"
                               Text="{Binding LastFile, ElementName=root}"
                               ToolTip="Путь к файлу"
                               HorizontalAlignment="Left"/>
                <Button Grid.Column="3"
                        Padding="0"
                        Height="20"
                        HorizontalAlignment="Right"
                        Focusable="False"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                        Click="MinimizeButton_Click">
                    <materialDesign:PackIcon Kind="WindowMinimize" />
                </Button>
                <Button Grid.Column="4"
                        Padding="0"
                        Height="20"
                        HorizontalAlignment="Right"
                        Focusable="False"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                        Click="MaximazeButton_Click">
                    <materialDesign:PackIcon>
                        <!--Kind="WindowMaximize"-->
                        <materialDesign:PackIcon.Style>
                            <Style TargetType="materialDesign:PackIcon">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=MWindow}" Value="Maximized">
                                        <Setter Property="Kind" Value="WindowRestore"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding WindowState, ElementName=MWindow}" Value="Normal">
                                        <Setter Property="Kind" Value="WindowMaximize"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </materialDesign:PackIcon.Style>
                    </materialDesign:PackIcon>
                </Button>
                <Button Grid.Column="5"
                        Padding="0"
                        Height="20"
                        HorizontalAlignment="Right"
                        Focusable="False"
                        Width="{Binding ActualHeight, RelativeSource={RelativeSource Self}}"
                        Click="CloseButton_Click">
                    <materialDesign:PackIcon Kind="WindowClose" />
                </Button>
            </Grid>
        </materialDesign:ColorZone>

        <Grid Grid.Row="1"
              Background="{DynamicResource MaterialDesignPaper}">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition Height="Auto"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="2*"/>
                <ColumnDefinition Width="3*" MinWidth="300"/>
                <ColumnDefinition Width="2*"/>
            </Grid.ColumnDefinitions>

            <materialDesign:Card Grid.Row="1" Grid.Column="1">
                <StackPanel Orientation="Vertical">
                    <Button Content="Выбрать папку"
                        IsEnabled="{Binding RenamingOff, ElementName=MWindow}"
                        Click="GetLocatoinButton_Click"/>
                    <Separator/>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <ComboBox Grid.Column="0"
                          IsEditable="True"
                          IsEnabled="{Binding RenamingOff, ElementName=MWindow}"
                          ItemsSource="{Binding Formats, ElementName=MWindow}"
                          Margin="8"
                          materialDesign:TextFieldAssist.TextBoxViewMargin="1,0"
                          materialDesign:HintAssist.FloatingScale="0.75"
                          materialDesign:HintAssist.IsFloating="True"
                          SelectedIndex="0"
                          Text="{Binding SelectedFormat, ElementName=MWindow, UpdateSourceTrigger=PropertyChanged, Mode=OneWayToSource}">
                            <ComboBox.Style>
                                <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
                                    <Setter Property="materialDesign:HintAssist.Hint" Value="Добавление формата"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding ChangeFormat, ElementName=MWindow}" Value="true">
                                            <Setter Property="materialDesign:HintAssist.Hint" Value="Замена формата"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </ComboBox.Style>
                        </ComboBox>
                        <ToggleButton Grid.Column="1"
                              BorderBrush="#FFCCCCCC"
                              IsChecked="{Binding ChangeFormat, ElementName=MWindow, Mode=OneWayToSource}"
                              Margin="0,8,8,8"
                              VerticalAlignment="Center">
                            <ToggleButton.Style>
                                <Style TargetType="ToggleButton" BasedOn="{StaticResource {x:Type ToggleButton}}">
                                    <Style.Triggers>
                                        <Trigger Property="IsChecked" Value="True">
                                            <Setter Property="ToolTip" Value="Выбрана замена формата"/>
                                        </Trigger>
                                        <Trigger Property="IsChecked" Value="False">
                                            <Setter Property="ToolTip" Value="Выбрано добавление формата в конец имени"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </ToggleButton.Style>
                        </ToggleButton>
                    </Grid>
                    <Separator/>
                    <Button Click="AddFormatButton_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Content" Value="Замена расширения"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FolderPath.Length, ElementName=MWindow}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding RenamingOff, ElementName=MWindow}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ChangeFormat, ElementName=MWindow}" Value="False">
                                        <Setter Property="Content" Value="Добавить расширение"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <ProgressBar Value="{Binding ProgressCompletion, ElementName=MWindow}"/>
                    <Separator/>
                    <Button Click="CropButton_Click">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource {x:Type Button}}">
                                <Setter Property="Content" Value="Нарезка фото"/>
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding FolderPath.Length, ElementName=MWindow}" Value="0">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsCropping, ElementName=MWindow}" Value="true">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                    <ProgressBar Value="{Binding CroppingProgressCompletion, ElementName=MWindow}"/>
                    <Separator/>
                    <Button Click="OpenFolderButton_Click" Content="Открыть папку"
                        IsEnabled="{Binding FolderPath.Length, ElementName=MWindow}"/>
                </StackPanel>
            </materialDesign:Card>
        </Grid>
    </Grid>
</Window>
